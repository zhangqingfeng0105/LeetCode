三数之和

给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]


class Solution(object):                          # 双指针
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums_len = len(nums)
        if nums_len <= 2:
            return []
        nums.sort()
        result = []
        for i in range(nums_len):
            if i > 0 and nums[i] == nums[i-1]:        # 不加这一步会超出时间限制
                continue
            start,end = i+1,nums_len-1
            while start < end:
                temp = nums[start]+nums[end]
                if temp == -nums[i]:   
                    result.append([nums[i],nums[start],nums[end]])
                    start += 1
                    end -= 1
                    while start<end and nums[start]==nums[start-1]:
                        start += 1
                    while start < end and nums[end]==nums[end+1]:
                        end -= 1
                elif temp > -nums[i]:
                    end -= 1
                else:
                    start += 1
        return result
