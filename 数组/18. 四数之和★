四数之和

给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。

注意：

答案中不可以包含重复的四元组。

示例：

给定数组 nums = [1, 0, -1, 0, -2, 2]，和 target = 0。

满足要求的四元组集合为：
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]


class Solution(object):
    def fourSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        if len(nums) <= 3:
            return []    
        memo = dict()
        result_list = []
        nums.sort()              # 排好序
        for i in range(len(nums)-1):
            for j in range(i+1, len(nums)):
                if j > i+1 and nums[j] == nums[j-1]:
                    continue             # 防止结果重复
                this_sum = nums[i] + nums[j]      # 先把i和j加起来
                expect = target - this_sum        # 剩下的值为expect，加上expect就是target目标值了
                if expect in memo:
                    for tup in memo[expect]: # a list
                        if tup[2] < i: # old i < old j < i < j
                            temp = [tup[0], tup[1], nums[i], nums[j]]
                            if temp not in result_list:
                                result_list.append(temp)

                # insert. 
                if this_sum not in memo:
                    memo[this_sum] = [(nums[i], nums[j], j)]

                else:
                    memo[this_sum].append((nums[i],nums[j], j))

        return result_list 
