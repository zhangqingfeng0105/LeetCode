两数之和

给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]


class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        len_l = len(nums)          
        # result_l = []                  # 第一种方法
        # for i in range(len_l):
        #     for j in range(i+1,len_l):
        #         if nums[i] + nums[j] == target:
        #             result_l.append(i)
        #             result_l.append(j)
        #             return result_l
        
        # return [[i,j]  for i in range(len_l) for j in range(i+1,len_l) if nums[i] + nums[j] == target][0]  # 第二种方法
        
        q = {}                      # 第三种
        for i in range(len_l):
            a=target - nums[i]
            if a in q:
                return [q[a],i]
            else:
                q[nums[i]] = i
