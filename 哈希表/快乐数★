快乐数

编写一个算法来判断一个数是不是“快乐数”。

一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。如果可以变为 1，那么这个数就是快乐数。

示例: 

输入: 19
输出: true
解释: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1


class Solution(object):
    def isHappy(self, n):
        """
        :type n: int
        :rtype: bool
        """
        sum = 0
        set_collection = set()
        while True:
            while n >0:    # while循环把每一位上的数平方再求和
                temp = n % 10
                sum += temp*temp
                n //= 10
            if sum ==1:
                return True
            if sum in set_collection:  # 把每次求和的结果存入set集合中，当出现重复的时候，说明进入了死循环，就不是快乐数了
                return False
            else:
                set_collection.add(sum)
            n = sum
            sum = 0
