53. 最大子序和

给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:

输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。


class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
#         size = len(nums)         # 法1
#         if size == 0:
#             return 0
#         # 以索引 i 结尾的最大子数组的和
#         end_i_max = nums[0]

#         res = nums[0]
#         for i in range(1, size):
#             # 例：[-3,1]
#             end_i_max = max(nums[i], end_i_max + nums[i])
#             res = max(res, end_i_max)
#         return res
        nums_size = len(nums)  
        if nums_size == 0 :
            return None
        elif nums_size == 1:
            return nums[0]
        else:
            dp = [0 for _ in range(nums_size)]
            dp[0]= nums[0]
            max_value = nums[0]
            for i in range(1,nums_size):
                dp[i] = max(dp[i-1] + nums[i],nums[i])
                if max_value < dp[i]:
                    max_value = dp[i]
            return max_value

