约瑟夫环的问题

有n个人排成一个圈，每个人按顺序编号，如n = 5,则这n个人的编号分别为1，2，3，4，5。再给定一个整数m（m<n)，现在从头开始报数，当报的数是m的整数倍
时，该人出列，当报到队尾后继续从队头接着报数，直到所有人都出列，问出列的顺序是什么？

例：

输入： n = 6, m = 3
输出：[3, 6, 4, 2, 5, 1]


代码

def yueSeFuHuan(n,m):
    l = [i for i in range(1,n+1)]   # n个人排成一个圈，假如n=3,那么就是三个人，编号分别是1,2,3
    i = 0       # 遍历这个圈的指针，只要用i%n，就能在这个列表l中一便一遍的扫描
    count = 0   # 计数器，只要遍历的的个数达到m，就代表数到第m个人，那么这个人出列，出列我们不要删除它，这样很慢，我们可以把那个位置置0
    output = []       # 最终输出的列表
    while len(output) < n:   # 当所有人都出列的时候，程序终止
        if l[i%n] != 0:      # 如果这个位置上的人没出列，那么计数器加1
            count += 1
            if count == m:
                output.append(l[i%n])
                l[i%n] = 0
                count = 0
            i += 1
        else:
            i += 1
    return output
