354. 俄罗斯套娃信封问题

给定一些标记了宽度和高度的信封，宽度和高度以整数对形式 (w, h) 出现。当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。

请计算最多能有多少个信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。

说明:
不允许旋转信封。

示例:

输入: envelopes = [[5,4],[6,4],[6,7],[2,3]]
输出: 3 
解释: 最多信封的个数为 3, 组合为: [2,3] => [5,4] => [6,7]。


★★思路：------------------------
把第一列按从小到大排序，第二列从大到小排序，取出第二列成为一维数组，此时便是最大子串长度


from bisect import bisect_left
from numpy import *
class Solution(object):
    def maxEnvelopes(self, envelopes):
        """
        :type envelopes: List[List[int]]
        :rtype: int
        """
        if len(envelopes) == 0:          # 法1 
            return 0
        arr_e = array(envelopes)             # 转化为numpy的array格式，方便排序和取出第二列

        arr = arr_e[lexsort((-arr_e[:,1],arr_e[:,0]))][:,1].tolist()      # 第一列从小到大排序，第二列从大到小排序，最后取出第二列
        stack = [arr[0]]
        for i in range(1,len(arr)):
            if arr[i] > stack[-1]:
                stack.append(arr[i])
            else:
                index = bisect_left(stack,arr[i])    # 使用二分查找
                stack[index] = arr[i]
        return len(stack)
