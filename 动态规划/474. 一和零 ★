★ 474. 一和零

在计算机界中，我们总是追求用有限的资源获取最大的收益。

现在，假设你分别支配着 m 个 0 和 n 个 1。另外，还有一个仅包含 0 和 1 字符串的数组。

你的任务是使用给定的 m 个 0 和 n 个 1 ，找到能拼出存在于数组中的字符串的最大数量。每个 0 和 1 至多被使用一次。

注意:

给定 0 和 1 的数量都不会超过 100。
给定字符串数组的长度不会超过 600。
示例 1:

输入: Array = {"10", "0001", "111001", "1", "0"}, m = 5, n = 3
输出: 4

解释: 总共 4 个字符串可以通过 5 个 0 和 3 个 1 拼出，即 "10","0001","1","0" 。
示例 2:

输入: Array = {"10", "0", "1"}, m = 1, n = 1
输出: 2

解释: 你可以拼出 "10"，但之后就没有剩余数字了。更好的选择是拼出 "0" 和 "1" 。


★ 思路; -----------------------------------------------

最后一步： 最优策略组成了最多的01串，其中有没有最后一个字符串St-1
情况一， 没有 St-1
      需要知道前t-1个01串中，用m个0和n个1最多组成多少个01串？
      
情况二，如果有St-1
      设第t个01串中有a(t-1)个0 和 b(t-1)个1
      需要知道前t-1个01串中，用m-a(t-1)个0 和 n-b(t-1)个1最多组成多少个01串
      
状态方程：
           f[i][j][k] 为前i个01串最多能有多少个被j个0和k个1组成
         f[i][j][k]  =  max( f[i-1][j][k],    f[i-1][j-a(i-1)][k-b(i-1)]+1 |  j>=a(i-1)  AND k>=b(i-1) )
                    前i-1个01串最多能有多少个被j个0和k个1组成    前i-1个01串最多能有多少个被j-a(i-1)个0和k-b(i-1)个1组成，再加上S(i-1)


class Solution(object):
    def findMaxForm(self, strs, m, n):
        """
        :type strs: List[str]
        :type m: int
        :type n: int
        :rtype: int
        """
        T = len(strs)
        cnt0 = [0 for i in range(T)]
        cnt1 = [0 for i in range(T)]
        for i in range(T):
            s = strs[i]
            for j in range(len(s)):
                if s[j] == '0':
                    cnt0[i] += 1
                else:
                    cnt1[i] += 1      # 0 和1的个数都数好了
        f = [[[0 for o in range(n+1)] for p in range(m+1)] for q in range(T+1)]
        
        for i in range(1,T+1):
            for j in range(m+1):
                for k in range(n+1):
                    f[i][j][k] = f[i-1][j][k]  # A[i-1] 没有被选择
                    if j >= cnt0[i-1] and k >= cnt1[i-1]:
                        f[i][j][k] = max(f[i][j][k], f[i-1][j-cnt0[i-1]][k-cnt1[i-1]]+1)
        return f[T][m][n]
 
