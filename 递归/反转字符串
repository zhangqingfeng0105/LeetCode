反转字符串

编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。

不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。

你可以假设数组中的所有字符都是 ASCII 码表中的可打印字符。

 

示例 1：

输入：["h","e","l","l","o"]
输出：["o","l","l","e","h"]
示例 2：

输入：["H","a","n","n","a","h"]
输出：["h","a","n","n","a","H"]


class Solution(object):
    def reverseString(self, s):
        """
        :type s: List[str]
        :rtype: None Do not return anything, modify s in-place instead.
        """
#         if not s:                                 # 版本一使用了额外空间，不合格  
#             return s
#         if len(s) <= 1:
#             return [s[0]]
#         else:
#             l=self.reverseString(s[1:]) + [s[0]]
#         return l

        start = 0                                 # 版本二
        end = len(s)-1
        return self.recursiveFunction(s,start,end)
    
    def recursiveFunction(self,s,start,end):       # 递归函数，定义两个指针，一个指头，一个指尾，往里收缩
        if start>=end:
            return s
        else:
            s[start],s[end] = s[end],s[start]      # 指针不重合，交换
            start+=1
            end -= 1
        return self.recursiveFunction(s,start,end)
